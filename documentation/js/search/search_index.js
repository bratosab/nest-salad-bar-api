var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.497,1,2.023]],["body/controllers/AppController.html",[0,2.272,1,3.071,2,1.937,3,0.375,4,0.325,5,0.325,6,3.099,7,0.375,8,1.351,9,4.664,10,1.611,11,0.033,12,0.666,13,3.719,14,1.049,15,1.472,16,0.623,17,0.805,18,2.761,19,3.099,20,0.375,21,0.184,22,3.099,23,1.937,24,1.244,25,3.719,26,0.025,27,0.025]],["title/modules/AppModule.html",[28,1.644,29,2.023]],["body/modules/AppModule.html",[1,2.725,2,1.869,3,0.247,4,0.214,5,0.214,11,0.033,16,0.744,17,0.53,18,2.714,19,2.038,20,0.247,21,0.121,26,0.018,27,0.018,28,2.214,29,3.836,30,1.274,31,2.065,32,2.038,33,2.038,34,2.038,35,2.714,36,3.099,37,2.257,38,2.257,39,2.595,40,1.769,41,1.769,42,2.447,43,2.99,44,2.725,45,2.595,46,2.447,47,2.447,48,1.568,49,1.769,50,2.447,51,3.589,52,2.447,53,2.038,54,2.038,55,2.301,56,2.447,57,2.447,58,2.447,59,1.06,60,2.038,61,2.447]],["title/injectables/AppService.html",[18,1.644,62,0.565]],["body/injectables/AppService.html",[3,0.394,4,0.341,5,0.341,7,0.394,8,1.395,9,4.751,11,0.032,12,0.7,14,1.103,15,1.52,16,0.508,17,0.846,18,2.577,20,0.394,21,0.194,24,1.308,26,0.025,27,0.025,59,1.694,62,0.886,63,1.552,64,3.257,65,3.91,66,3.91,67,3.91,68,3.91]],["title/guards/AuthGuard.html",[55,2.023,69,2.283]],["body/guards/AuthGuard.html",[3,0.317,4,0.274,5,0.274,7,0.317,8,1.208,11,0.033,12,0.562,14,0.886,16,0.633,17,0.68,20,0.317,21,0.156,24,1.05,26,0.022,27,0.022,55,2.746,62,0.767,70,3.141,71,2.616,72,5.479,73,3.141,74,4.362,75,3.141,76,1.05,77,0.562,78,0.408,79,0.965,80,3.568,81,4.283,82,4.283,83,2.311,84,3.097,85,2.013,86,1.361,87,1.05,88,2.231,89,2.271,90,2.616,91,4.283,92,3.141,93,2.013,94,3.141]],["title/classes/CreateDressingDTO.html",[21,0.156,95,1.816]],["body/classes/CreateDressingDTO.html",[3,0.351,4,0.303,5,0.303,7,0.351,10,1.986,11,0.032,12,0.821,15,1.408,16,0.596,20,0.351,21,0.227,26,0.024,27,0.024,77,0.918,78,0.596,87,1.533,95,2.638,96,1.81,97,3.288,98,2.895,99,3.819,100,1.408,101,2.672,102,2.952,103,3.475,104,2.387,105,3.288,106,3.475,107,1.81,108,1.162,109,1.999]],["title/classes/CreateSaladDTO.html",[21,0.156,110,1.816]],["body/classes/CreateSaladDTO.html",[3,0.379,4,0.328,5,0.328,7,0.379,10,1.629,11,0.032,12,0.673,15,1.482,16,0.627,20,0.379,21,0.239,26,0.025,27,0.025,59,1.629,78,0.489,87,1.614,96,1.958,97,3.093,100,1.482,102,3.066,107,1.958,110,2.777,111,3.133,112,4.825,113,4.439,114,3.76,115,2.719]],["title/classes/CreateToppingDTO.html",[21,0.156,116,1.816]],["body/classes/CreateToppingDTO.html",[3,0.351,4,0.303,5,0.303,7,0.351,10,1.986,11,0.032,12,0.821,15,1.408,16,0.596,20,0.351,21,0.227,26,0.024,27,0.024,77,0.918,78,0.596,87,1.533,96,1.81,97,3.288,99,3.819,100,1.408,101,2.672,102,2.952,104,2.387,105,3.288,107,1.81,116,2.638,117,2.895,118,3.475,119,3.475,120,1.265,121,1.999]],["title/modules/DataModule.html",[28,1.644,35,1.644]],["body/modules/DataModule.html",[3,0.386,4,0.334,5,0.334,11,0.033,16,0.634,17,0.827,20,0.386,21,0.189,26,0.025,27,0.025,28,2.54,30,1.991,35,2.54,45,2.765,77,0.685,122,3.823,123,4.063,124,4.063,125,1.991,126,3.823,127,3.823,128,3.823,129,3.823,130,3.823,131,3.823,132,3.823]],["title/interfaces/Dressing.html",[108,1.056,133,1.497]],["body/interfaces/Dressing.html",[3,0.386,4,0.334,5,0.334,7,0.386,11,0.031,15,1.65,20,0.386,26,0.025,27,0.025,77,1.013,78,0.698,100,1.498,101,2.946,104,3.112,108,1.631,133,1.812,134,2.451,135,3.185,136,2.946]],["title/classes/DressingDTO.html",[21,0.156,137,1.644]],["body/classes/DressingDTO.html",[3,0.334,4,0.289,5,0.289,7,0.334,10,2.168,11,0.032,12,0.896,15,1.362,16,0.576,20,0.334,21,0.22,26,0.023,27,0.023,77,0.896,78,0.65,87,1.483,96,1.723,100,1.362,101,2.607,102,2.88,104,2.785,105,3.575,107,1.723,108,1.674,109,1.903,136,2.607,137,2.31,138,2.755,139,3.307,140,3.307,141,3.307]],["title/injectables/DressingPipe.html",[62,0.565,142,2.023]],["body/injectables/DressingPipe.html",[3,0.263,4,0.227,5,0.227,7,0.263,8,1.059,11,0.033,12,0.673,14,0.734,16,0.488,17,0.564,20,0.263,21,0.129,24,1.473,26,0.019,27,0.019,37,1.627,62,0.673,63,1.034,76,1.256,77,0.673,78,0.338,79,1.154,87,0.871,88,1.956,108,1.256,120,0.948,137,2.663,142,2.408,143,2.17,144,3.129,145,1.956,146,2.604,147,2.604,148,3.129,149,3.756,150,2.604,151,3.129,152,2.17,153,1.499,154,3.129,155,1.883,156,1.627,157,2.17,158,2.604,159,2.17,160,3.67,161,2.604,162,2.604,163,2.604,164,2.604,165,2.604,166,2.604,167,2.17,168,1.883,169,1.235,170,2.17,171,2.604,172,2.17,173,2.604]],["title/injectables/DressingsService.html",[37,1.367,62,0.565]],["body/injectables/DressingsService.html",[3,0.287,4,0.248,5,0.248,7,0.287,8,1.127,11,0.033,12,0.828,14,1.127,16,0.687,17,0.615,20,0.287,21,0.141,23,1.48,24,1.336,26,0.021,27,0.021,37,1.731,62,0.716,63,1.128,76,1.336,77,0.716,78,0.519,79,1.228,83,2.67,86,1.231,95,2.886,108,0.95,109,1.635,125,1.48,145,1.48,153,1.635,156,1.231,174,2.367,175,3.329,176,3.215,177,2.055,178,3.627,179,2.842,180,2.89,181,3.996,182,2.842,183,3.329,184,2.842,185,2.055,186,2.367,187,2.055,188,2.842,189,2.367,190,2.842]],["title/controllers/IngredientController.html",[0,1.497,44,2.023]],["body/controllers/IngredientController.html",[0,1.625,2,1.197,3,0.232,4,0.201,5,0.201,7,0.232,8,0.967,10,1.968,11,0.033,12,0.813,14,1.281,16,0.705,17,0.498,20,0.232,21,0.114,24,1.519,26,0.018,27,0.018,37,1.775,38,1.775,44,2.197,48,1.474,49,1.662,76,1.146,77,0.614,78,0.445,79,1.053,83,2.629,86,0.996,95,2.614,108,0.769,109,1.323,116,2.614,120,0.837,121,1.323,145,1.197,156,1.485,159,1.915,183,2.855,185,2.479,186,1.915,191,1.915,192,3.428,193,3.428,194,4.543,195,4.543,196,2.299,197,3.428,198,2.299,199,2.299,200,3.428,201,2.299,202,2.855,203,3.428,204,2.299,205,3.428,206,2.299,207,1.915,208,1.915,209,1.915,210,1.915,211,2.299,212,2.299,213,2.299,214,2.299]],["title/injectables/LoggerMiddleware.html",[62,0.565,215,2.023]],["body/injectables/LoggerMiddleware.html",[3,0.298,4,0.258,5,0.258,7,0.298,8,1.157,11,0.032,12,0.735,14,0.832,16,0.613,17,0.639,20,0.298,21,0.146,23,2.457,26,0.021,27,0.021,62,0.735,63,1.171,76,0.987,77,0.529,78,0.384,79,0.907,84,3.688,85,1.892,87,0.987,89,2.134,100,1.261,156,2.044,169,1.946,215,2.631,216,2.459,217,4.248,218,4.104,219,4.104,220,4.718,221,5.099,222,4.248,223,5.099,224,2.952,225,2.459,226,2.134,227,2.134,228,4.104,229,2.952,230,3.419,231,1.399,232,2.134,233,2.952,234,2.952,235,2.459]],["title/injectables/LoggingInterceptor.html",[62,0.565,236,2.023]],["body/injectables/LoggingInterceptor.html",[3,0.271,4,0.234,5,0.234,7,0.271,8,1.083,11,0.033,12,0.688,14,0.757,16,0.582,17,0.581,20,0.271,21,0.133,23,2.334,24,0.898,26,0.02,27,0.02,62,0.688,63,1.066,74,4.074,76,0.898,77,0.481,78,0.349,79,0.825,80,2.238,83,2.125,84,2.777,85,1.722,86,1.163,87,0.898,88,2.334,89,1.942,90,2.238,100,1.179,156,1.941,169,1.82,217,4.074,222,4.074,226,1.942,227,1.942,235,2.238,236,2.461,237,2.238,238,3.84,239,3.84,240,4.891,241,2.686,242,3.84,243,2.686,244,3.84,245,3.84,246,2.686,247,2.686,248,3.84,249,3.84,250,2.686,251,2.686,252,2.686,253,2.686,254,2.686,255,2.686,256,2.686]],["title/interfaces/Salad.html",[59,1.367,133,1.497]],["body/interfaces/Salad.html",[3,0.327,4,0.283,5,0.283,7,0.327,11,0.032,15,1.754,16,0.569,20,0.327,26,0.023,27,0.023,59,1.897,78,0.72,79,1.63,100,1.345,108,1.985,109,1.867,113,4.421,120,1.932,121,1.867,133,1.538,134,2.08,136,2.764,257,2.703,258,4.862,259,3.401]],["title/controllers/SaladController.html",[0,1.497,260,2.023]],["body/controllers/SaladController.html",[0,1.454,2,1.035,3,0.2,4,0.173,5,0.173,7,0.2,8,0.865,10,1.826,11,0.033,12,0.755,14,1.189,15,1.479,16,0.706,17,0.43,20,0.2,21,0.098,22,1.655,24,1.409,26,0.016,27,0.016,59,1.623,76,1.253,77,0.671,78,0.487,79,1.151,83,2.16,86,0.86,93,1.966,108,1.409,110,2.425,115,1.436,137,2.195,142,1.273,155,1.436,169,0.942,176,2.702,207,2.556,208,3.122,231,1.777,232,1.436,236,1.273,259,2.702,260,1.966,261,1.655,262,3.122,263,3.068,264,3.122,265,1.655,266,2.373,267,3.068,268,1.986,269,3.511,270,1.986,271,1.986,272,1.986,273,1.655,274,3.068,275,1.986,276,1.655,277,3.068,278,3.748,279,1.986,280,1.986,281,1.655,282,1.655,283,1.436,284,1.986,285,1.966,286,1.986,287,1.986,288,1.986,289,1.986,290,1.986,291,3.068,292,1.986,293,1.986,294,1.986,295,1.986,296,1.986,297,1.986]],["title/modules/SaladModule.html",[28,1.644,36,1.816]],["body/modules/SaladModule.html",[2,1.85,3,0.243,4,0.211,5,0.211,8,0.68,11,0.033,12,0.432,14,0.68,16,0.715,17,0.522,20,0.243,21,0.119,26,0.018,27,0.018,28,1.85,30,1.256,31,2.044,35,2.7,36,3.371,37,2.246,38,2.246,39,2.568,40,1.744,41,1.744,43,2.959,45,2.568,48,1.546,49,1.744,54,2.009,60,2.009,76,0.807,77,0.432,78,0.313,79,0.741,87,0.807,88,1.256,93,1.546,123,2.009,124,2.009,125,1.256,215,1.546,225,2.009,230,2.009,231,2.458,232,1.744,260,2.702,298,2.009,299,2.412,300,2.009,301,1.744,302,2.412,303,3.552,304,4.65,305,2.412,306,2.412,307,3.552,308,2.412,309,2.412,310,2.568,311,2.009,312,2.412,313,2.412,314,2.412]],["title/injectables/SaladService.html",[62,0.565,231,1.497]],["body/injectables/SaladService.html",[3,0.168,4,0.146,5,0.146,7,0.168,8,0.754,11,0.033,12,0.8,14,1.324,15,1.546,16,0.634,17,0.361,20,0.168,21,0.083,23,0.869,24,1.401,26,0.014,27,0.014,59,2.425,62,0.479,63,0.662,76,1.401,77,0.75,78,0.544,79,1.287,83,2.587,86,0.722,88,1.392,108,1.401,110,2.202,115,1.206,125,0.869,136,0.869,137,1.993,145,0.869,153,0.96,155,1.206,156,1.658,168,1.206,169,1.814,176,2.453,177,1.206,178,2.767,180,1.933,187,1.206,231,1.267,258,2.227,259,2.453,262,2.227,264,2.227,265,2.227,266,1.993,269,3.489,273,2.227,276,1.389,281,1.389,282,1.389,283,1.206,315,1.389,316,2.673,317,2.673,318,1.668,319,1.668,320,2.673,321,1.668,322,3.827,323,1.206,324,2.673,325,2.673,326,2.673,327,1.668,328,1.668,329,3.827,330,2.673,331,1.668,332,2.673,333,2.673,334,1.668,335,1.668,336,1.668,337,1.668,338,2.673,339,1.668,340,1.668,341,1.668,342,1.668]],["title/interfaces/Topping.html",[120,1.149,133,1.497]],["body/interfaces/Topping.html",[3,0.386,4,0.334,5,0.334,7,0.386,11,0.031,15,1.65,20,0.386,26,0.025,27,0.025,77,1.013,78,0.698,100,1.498,101,2.946,104,3.112,120,1.776,133,1.812,134,2.451,136,2.946,343,3.185]],["title/classes/ToppingDTO.html",[21,0.156,266,1.644]],["body/classes/ToppingDTO.html",[3,0.332,4,0.287,5,0.287,7,0.332,10,2.163,11,0.032,12,0.894,15,1.358,16,0.575,20,0.332,21,0.219,26,0.023,27,0.023,77,0.894,78,0.649,87,1.479,96,1.714,100,1.358,101,2.6,102,2.873,104,2.78,105,3.675,107,1.714,120,1.818,121,1.894,136,2.6,266,2.303,344,2.742,345,3.291,346,3.291,347,3.291]],["title/injectables/ToppingsPipe.html",[62,0.565,285,2.023]],["body/injectables/ToppingsPipe.html",[3,0.25,4,0.217,5,0.217,7,0.25,8,1.023,11,0.034,12,0.444,14,0.7,16,0.557,17,0.537,20,0.25,21,0.123,24,1.433,26,0.019,27,0.019,38,1.857,48,1.591,62,0.649,63,0.985,76,0.83,77,0.444,78,0.323,79,0.762,87,0.83,88,2.232,120,1.321,144,3.021,145,1.293,148,2.068,151,3.021,152,2.068,153,1.428,154,3.021,156,1.571,157,2.068,160,3.021,167,2.068,168,1.795,169,1.177,170,3.021,172,2.068,210,2.068,259,2.325,266,2.455,283,1.795,285,2.325,348,2.068,349,4.286,350,3.627,351,2.482,352,2.482,353,2.482,354,4.286,355,2.482,356,2.482,357,2.482,358,2.482,359,2.482,360,2.482,361,2.482,362,2.482,363,2.482]],["title/injectables/ToppingsService.html",[38,1.367,62,0.565]],["body/injectables/ToppingsService.html",[3,0.287,4,0.248,5,0.248,7,0.287,8,1.127,11,0.033,12,0.828,14,1.127,16,0.687,17,0.615,20,0.287,21,0.141,23,1.48,24,1.336,26,0.021,27,0.021,38,1.731,62,0.716,63,1.128,76,1.336,77,0.716,78,0.519,79,1.228,83,2.67,86,1.231,116,2.886,120,1.035,121,1.635,125,1.48,145,1.48,153,1.635,156,1.231,175,3.329,176,3.215,177,2.055,178,3.627,180,2.89,185,2.055,187,2.055,189,2.367,202,3.329,209,2.367,364,2.367,365,2.842,366,3.996,367,2.842,368,2.842,369,2.842,370,2.842]],["title/coverage.html",[371,3.108]],["body/coverage.html",[0,2.007,1,1.557,5,0.212,6,2.024,11,0.032,18,1.265,21,0.246,26,0.018,27,0.018,37,1.052,38,1.052,44,1.557,55,1.557,59,1.052,62,0.987,64,2.024,69,1.757,71,2.024,78,0.316,95,1.398,97,2.713,98,2.024,108,0.812,110,1.398,111,2.024,116,1.398,117,2.024,120,0.885,133,2.007,135,2.024,137,1.265,138,2.024,142,1.557,143,2.024,169,1.152,174,2.024,191,2.024,215,1.557,216,2.024,231,1.152,236,1.557,237,2.024,257,2.024,260,1.557,261,2.024,266,1.265,285,1.557,301,1.757,310,1.757,315,2.024,343,2.024,344,2.024,348,2.024,364,2.024,371,1.757,372,2.429,373,2.429,374,2.429,375,6.209,376,4.971,377,4.971,378,3.57,379,5.198,380,2.024,381,2.429,382,2.024,383,3.57,384,2.429,385,2.429,386,2.429,387,2.429,388,2.429,389,2.429]],["title/dependencies.html",[31,2.183,390,2.2]],["body/dependencies.html",[11,0.033,17,0.887,21,0.252,26,0.026,27,0.026,31,2.357,53,3.413,85,2.626,86,1.775,107,2.134,125,2.134,391,5.544,392,4.097,393,4.097,394,4.097,395,4.097,396,4.097,397,4.097,398,4.097,399,4.097,400,4.097]],["title/miscellaneous/functions.html",[401,1.693,402,3.161]],["body/miscellaneous/functions.html",[7,0.473,11,0.028,26,0.028,27,0.028,380,3.902,382,4.895,401,3.003,402,3.902,403,4.684]],["title/index.html",[7,0.266,404,2.641,405,2.641]],["body/index.html",[4,0.26,11,0.032,26,0.021,27,0.021,323,2.153,371,2.153,406,2.977,407,2.977,408,4.129,409,2.977,410,2.977,411,2.977,412,2.977,413,2.977,414,2.977,415,4.74,416,2.977,417,2.977,418,2.977,419,2.977,420,5.705,421,2.977,422,2.977,423,2.977,424,5.563,425,2.977,426,2.977,427,4.129,428,2.977,429,2.977,430,2.977,431,2.977,432,4.129,433,4.129,434,2.977,435,2.977,436,2.977,437,4.129,438,4.129,439,2.977,440,2.977,441,2.977,442,2.977,443,2.977,444,2.48,445,2.977,446,2.977,447,2.977,448,2.977,449,2.977,450,2.977,451,2.977,452,2.977,453,2.977,454,2.977,455,2.48,456,2.977,457,2.977,458,2.977,459,2.977,460,2.977,461,2.977,462,2.48]],["title/modules.html",[30,2.239]],["body/modules.html",[11,0.028,26,0.028,27,0.028,29,2.866,30,2.328,35,2.328,36,2.572,444,4.476,463,5.373,464,5.373,465,5.761,466,4.47,467,4.47]],["title/overview.html",[468,3.581]],["body/overview.html",[2,1.682,11,0.032,18,2.575,26,0.022,27,0.022,29,3.958,30,1.682,31,2.512,32,2.69,33,2.69,34,2.69,35,2.759,36,3.526,37,2.294,38,2.294,39,3.156,40,2.335,41,2.335,63,1.282,69,2.335,96,1.682,134,2.07,231,2.344,298,2.69,300,2.69,468,2.69,469,4.945,470,3.229,471,3.229,472,3.229]],["title/properties.html",[100,1.165,390,2.2]],["body/properties.html",[11,0.032,26,0.028,27,0.028,100,1.41,323,3.319,455,3.824,462,3.824,473,4.59,474,4.59,475,4.59]],["title/miscellaneous/variables.html",[401,1.693,476,3.161]],["body/miscellaneous/variables.html",[7,0.445,11,0.032,26,0.027,27,0.027,78,0.573,93,2.829,226,3.191,227,3.191,301,3.191,310,3.855,311,3.676,401,2.829,476,3.676,477,4.413,478,4.413]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"modules/DataModule.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":474,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":472,"title":{},"body":{"overview.html":{}}}],["2/7",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":469,"title":{},"body":{"overview.html":{}}}],["3002",{"_index":131,"title":{},"body":{"modules/DataModule.html":{}}}],["5",{"_index":471,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":470,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["9.3.12",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":175,"title":{},"body":{"injectables/DressingsService.html":{},"injectables/ToppingsService.html":{}}}],["add(newdressing",{"_index":181,"title":{},"body":{"injectables/DressingsService.html":{}}}],["add(newtopping",{"_index":366,"title":{},"body":{"injectables/ToppingsService.html":{}}}],["addtoppings",{"_index":262,"title":{},"body":{"controllers/SaladController.html":{},"injectables/SaladService.html":{}}}],["addtoppings(saladid",{"_index":265,"title":{},"body":{"controllers/SaladController.html":{},"injectables/SaladService.html":{}}}],["amazing",{"_index":445,"title":{},"body":{"index.html":{}}}],["api",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["app",{"_index":422,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":414,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":349,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["authguard",{"_index":55,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authheader",{"_index":91,"title":{},"body":{"guards/AuthGuard.html":{}}}],["author",{"_index":455,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":467,"title":{},"body":{"modules.html":{}}}],["await",{"_index":353,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["backers",{"_index":446,"title":{},"body":{"index.html":{}}}],["bar",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["body",{"_index":207,"title":{},"body":{"controllers/IngredientController.html":{},"controllers/SaladController.html":{}}}],["body(dressingpipe",{"_index":296,"title":{},"body":{"controllers/SaladController.html":{}}}],["boolean",{"_index":81,"title":{},"body":{"guards/AuthGuard.html":{}}}],["bootstrap",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":465,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":463,"title":{},"body":{"modules.html":{}}}],["building",{"_index":409,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":240,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["canactivate",{"_index":72,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":73,"title":{},"body":{"guards/AuthGuard.html":{}}}],["class",{"_index":21,"title":{"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"classes/DressingDTO.html":{},"classes/ToppingDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"modules/DataModule.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":96,"title":{},"body":{"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"classes/DressingDTO.html":{},"classes/ToppingDTO.html":{},"overview.html":{}}}],["clientproxy",{"_index":178,"title":{},"body":{"injectables/DressingsService.html":{},"injectables/SaladService.html":{},"injectables/ToppingsService.html":{}}}],["clientsmodule",{"_index":123,"title":{},"body":{"modules/DataModule.html":{},"modules/SaladModule.html":{}}}],["clientsmodule.register",{"_index":126,"title":{},"body":{"modules/DataModule.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_saladmodule",{"_index":298,"title":{},"body":{"modules/SaladModule.html":{},"overview.html":{}}}],["cluster_saladmodule_imports",{"_index":299,"title":{},"body":{"modules/SaladModule.html":{}}}],["cluster_saladmodule_providers",{"_index":300,"title":{},"body":{"modules/SaladModule.html":{},"overview.html":{}}}],["configure",{"_index":302,"title":{},"body":{"modules/SaladModule.html":{}}}],["configure(consumer",{"_index":303,"title":{},"body":{"modules/SaladModule.html":{}}}],["const",{"_index":88,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DressingPipe.html":{},"injectables/LoggingInterceptor.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["constructor(@inject('data",{"_index":187,"title":{},"body":{"injectables/DressingsService.html":{},"injectables/SaladService.html":{},"injectables/ToppingsService.html":{}}}],["constructor(dataclient",{"_index":177,"title":{},"body":{"injectables/DressingsService.html":{},"injectables/SaladService.html":{},"injectables/ToppingsService.html":{}}}],["constructor(pipeconfig",{"_index":146,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/SaladController.html":{}}}],["consumer",{"_index":306,"title":{},"body":{"modules/SaladModule.html":{}}}],["consumer.apply(loggermiddleware).forroutes(saladcontroller",{"_index":314,"title":{},"body":{"modules/SaladModule.html":{}}}],["containes",{"_index":330,"title":{},"body":{"injectables/SaladService.html":{}}}],["containing",{"_index":324,"title":{},"body":{"injectables/SaladService.html":{}}}],["context",{"_index":80,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.getargs",{"_index":90,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.getclass",{"_index":247,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/IngredientController.html":{},"controllers/SaladController.html":{}},"body":{"controllers/AppController.html":{},"controllers/IngredientController.html":{},"controllers/SaladController.html":{},"coverage.html":{}}}],["controllerclass",{"_index":246,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["controllerclass.name",{"_index":255,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/IngredientController.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"overview.html":{}}}],["core/auth.guard",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["core/logging.interceptor",{"_index":280,"title":{},"body":{"controllers/SaladController.html":{}}}],["coverage",{"_index":371,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":322,"title":{},"body":{"injectables/SaladService.html":{}}}],["create_dressing",{"_index":190,"title":{},"body":{"injectables/DressingsService.html":{}}}],["create_topping",{"_index":370,"title":{},"body":{"injectables/ToppingsService.html":{}}}],["created",{"_index":325,"title":{},"body":{"injectables/SaladService.html":{}}}],["createdressing",{"_index":192,"title":{},"body":{"controllers/IngredientController.html":{}}}],["createdressing(@body",{"_index":213,"title":{},"body":{"controllers/IngredientController.html":{}}}],["createdressing(newdressing",{"_index":196,"title":{},"body":{"controllers/IngredientController.html":{}}}],["createdressingdto",{"_index":95,"title":{"classes/CreateDressingDTO.html":{}},"body":{"classes/CreateDressingDTO.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"coverage.html":{}}}],["createsalad",{"_index":316,"title":{},"body":{"injectables/SaladService.html":{}}}],["createsalad(salad",{"_index":320,"title":{},"body":{"injectables/SaladService.html":{}}}],["createsaladdto",{"_index":110,"title":{"classes/CreateSaladDTO.html":{}},"body":{"classes/CreateSaladDTO.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"coverage.html":{}}}],["createtopping",{"_index":193,"title":{},"body":{"controllers/IngredientController.html":{}}}],["createtopping(@body",{"_index":211,"title":{},"body":{"controllers/IngredientController.html":{}}}],["createtopping(newtopping",{"_index":199,"title":{},"body":{"controllers/IngredientController.html":{}}}],["createtoppingdto",{"_index":116,"title":{"classes/CreateToppingDTO.html":{}},"body":{"classes/CreateToppingDTO.html":{},"controllers/IngredientController.html":{},"injectables/ToppingsService.html":{},"coverage.html":{}}}],["crypto",{"_index":334,"title":{},"body":{"injectables/SaladService.html":{}}}],["d",{"_index":162,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["d.name",{"_index":163,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["d.price",{"_index":165,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["data",{"_index":127,"title":{},"body":{"modules/DataModule.html":{}}}],["data/data.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/SaladModule.html":{}}}],["dataclient",{"_index":180,"title":{},"body":{"injectables/DressingsService.html":{},"injectables/SaladService.html":{},"injectables/ToppingsService.html":{}}}],["datamodule",{"_index":35,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/SaladModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":258,"title":{},"body":{"interfaces/Salad.html":{},"injectables/SaladService.html":{}}}],["date.now",{"_index":249,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"classes/DressingDTO.html":{},"controllers/IngredientController.html":{},"controllers/SaladController.html":{},"classes/ToppingDTO.html":{}}}],["default",{"_index":226,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SaladModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":323,"title":{},"body":{"injectables/SaladService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":423,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["dressing",{"_index":108,"title":{"interfaces/Dressing.html":{}},"body":{"classes/CreateDressingDTO.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"coverage.html":{}}}],["dressing.dto",{"_index":186,"title":{},"body":{"injectables/DressingsService.html":{},"controllers/IngredientController.html":{}}}],["dressing.dto.ts",{"_index":98,"title":{},"body":{"classes/CreateDressingDTO.html":{},"coverage.html":{}}}],["dressing.dto.ts:6",{"_index":103,"title":{},"body":{"classes/CreateDressingDTO.html":{}}}],["dressing.dto.ts:9",{"_index":106,"title":{},"body":{"classes/CreateDressingDTO.html":{}}}],["dressing.name",{"_index":164,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["dressing.price",{"_index":166,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["dressingdto",{"_index":137,"title":{"classes/DressingDTO.html":{}},"body":{"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"coverage.html":{}}}],["dressingpipe",{"_index":142,"title":{"injectables/DressingPipe.html":{}},"body":{"injectables/DressingPipe.html":{},"controllers/SaladController.html":{},"coverage.html":{}}}],["dressings",{"_index":158,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["dressings.find",{"_index":161,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["dressingsservice",{"_index":37,"title":{"injectables/DressingsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"modules/SaladModule.html":{},"coverage.html":{},"overview.html":{}}}],["dto/create",{"_index":281,"title":{},"body":{"controllers/SaladController.html":{},"injectables/SaladService.html":{}}}],["dto/dressing.dto",{"_index":155,"title":{},"body":{"injectables/DressingPipe.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{}}}],["dto/topping.dto",{"_index":283,"title":{},"body":{"controllers/SaladController.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{}}}],["e2e",{"_index":434,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":410,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":74,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggingInterceptor.html":{}}}],["existingtoppings",{"_index":352,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["existingtoppings.find",{"_index":356,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"modules/DataModule.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["exports",{"_index":132,"title":{},"body":{"modules/DataModule.html":{}}}],["express",{"_index":85,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["false",{"_index":94,"title":{},"body":{"guards/AuthGuard.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"modules/DataModule.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"coverage.html":{}}}],["findsalad",{"_index":317,"title":{},"body":{"injectables/SaladService.html":{}}}],["findsalad(saladid",{"_index":326,"title":{},"body":{"injectables/SaladService.html":{}}}],["forbidnonwhitelisted",{"_index":294,"title":{},"body":{"controllers/SaladController.html":{}}}],["found",{"_index":160,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/ToppingsPipe.html":{}}}],["framework",{"_index":408,"title":{},"body":{"index.html":{}}}],["function",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":402,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('dressings",{"_index":203,"title":{},"body":{"controllers/IngredientController.html":{}}}],["get('toppings",{"_index":205,"title":{},"body":{"controllers/IngredientController.html":{}}}],["getall",{"_index":176,"title":{},"body":{"injectables/DressingsService.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"injectables/ToppingsService.html":{}}}],["getdressings",{"_index":194,"title":{},"body":{"controllers/IngredientController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":404,"title":{"index.html":{}},"body":{}}],["gettoppings",{"_index":195,"title":{},"body":{"controllers/IngredientController.html":{}}}],["graph",{"_index":466,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":441,"title":{},"body":{"index.html":{}}}],["guard",{"_index":69,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":70,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handle",{"_index":250,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["here",{"_index":452,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":151,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/ToppingsPipe.html":{}}}],["https://nestjs.com",{"_index":459,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":152,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/ToppingsPipe.html":{}}}],["httpstatus.bad_request",{"_index":172,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/ToppingsPipe.html":{}}}],["id",{"_index":136,"title":{},"body":{"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"interfaces/Salad.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{}}}],["identifier",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":87,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"modules/SaladModule.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"modules/DataModule.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/SaladModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"modules/DataModule.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["ingredient.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["ingredientcontroller",{"_index":44,"title":{"controllers/IngredientController.html":{}},"body":{"modules/AppModule.html":{},"controllers/IngredientController.html":{},"coverage.html":{}}}],["inject",{"_index":153,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["inject('pipe_config",{"_index":157,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/ToppingsPipe.html":{}}}],["injectable",{"_index":62,"title":{"injectables/AppService.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"overview.html":{}}}],["installation",{"_index":419,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":421,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":238,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":239,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":133,"title":{"interfaces/Dressing.html":{},"interfaces/Salad.html":{},"interfaces/Topping.html":{}},"body":{"interfaces/Dressing.html":{},"interfaces/Salad.html":{},"interfaces/Topping.html":{},"coverage.html":{}}}],["interfaces",{"_index":134,"title":{},"body":{"interfaces/Dressing.html":{},"interfaces/Salad.html":{},"interfaces/Topping.html":{},"overview.html":{}}}],["interfaces/dressing.interface",{"_index":109,"title":{},"body":{"classes/CreateDressingDTO.html":{},"classes/DressingDTO.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"interfaces/Salad.html":{}}}],["interfaces/salad.interface",{"_index":115,"title":{},"body":{"classes/CreateSaladDTO.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{}}}],["interfaces/topping.interface",{"_index":121,"title":{},"body":{"classes/CreateToppingDTO.html":{},"controllers/IngredientController.html":{},"interfaces/Salad.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsService.html":{}}}],["isnotempty",{"_index":102,"title":{},"body":{"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"classes/DressingDTO.html":{},"classes/ToppingDTO.html":{}}}],["isnumber",{"_index":105,"title":{},"body":{"classes/CreateDressingDTO.html":{},"classes/CreateToppingDTO.html":{},"classes/DressingDTO.html":{},"classes/ToppingDTO.html":{}}}],["items",{"_index":292,"title":{},"body":{"controllers/SaladController.html":{}}}],["join",{"_index":448,"title":{},"body":{"index.html":{}}}],["json.stringify(dressing",{"_index":171,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["json.stringify(topping",{"_index":363,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["kamil",{"_index":456,"title":{},"body":{"index.html":{}}}],["license",{"_index":462,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":438,"title":{},"body":{"index.html":{}}}],["logger",{"_index":217,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{}}}],["logger(loggermiddleware.name",{"_index":228,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger(logginginterceptor.name",{"_index":242,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["loggermiddleware",{"_index":215,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"modules/SaladModule.html":{},"coverage.html":{}}}],["logginginterceptor",{"_index":236,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"coverage.html":{}}}],["makesalad",{"_index":263,"title":{},"body":{"controllers/SaladController.html":{}}}],["makesalad(@body",{"_index":289,"title":{},"body":{"controllers/SaladController.html":{}}}],["makesalad(salad",{"_index":271,"title":{},"body":{"controllers/SaladController.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"modules/DataModule.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["middlewareconsumer",{"_index":304,"title":{},"body":{"modules/SaladModule.html":{}}}],["middlewares/logger.middleware",{"_index":308,"title":{},"body":{"modules/SaladModule.html":{}}}],["miscellaneous",{"_index":401,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":437,"title":{},"body":{"index.html":{}}}],["mode",{"_index":427,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/SaladModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/SaladModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/SaladModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":451,"title":{},"body":{"index.html":{}}}],["ms",{"_index":256,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["myśliwiec",{"_index":457,"title":{},"body":{"index.html":{}}}],["name",{"_index":77,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateToppingDTO.html":{},"modules/DataModule.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["nest",{"_index":415,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":461,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":244,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/DataModule.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":125,"title":{},"body":{"modules/DataModule.html":{},"injectables/DressingsService.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"injectables/ToppingsService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":230,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"modules/SaladModule.html":{}}}],["nestmodule",{"_index":307,"title":{},"body":{"modules/SaladModule.html":{}}}],["new",{"_index":169,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"coverage.html":{}}}],["newdressing",{"_index":183,"title":{},"body":{"injectables/DressingsService.html":{},"controllers/IngredientController.html":{}}}],["newsalad",{"_index":338,"title":{},"body":{"injectables/SaladService.html":{}}}],["newtopping",{"_index":202,"title":{},"body":{"controllers/IngredientController.html":{},"injectables/ToppingsService.html":{}}}],["next",{"_index":222,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{}}}],["nextfunction",{"_index":223,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["node.js",{"_index":407,"title":{},"body":{"index.html":{}}}],["notimplementedexception",{"_index":332,"title":{},"body":{"injectables/SaladService.html":{}}}],["now",{"_index":248,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":420,"title":{},"body":{"index.html":{}}}],["null",{"_index":173,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["number",{"_index":104,"title":{},"body":{"classes/CreateDressingDTO.html":{},"classes/CreateToppingDTO.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{}}}],["object",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":83,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"injectables/ToppingsService.html":{}}}],["omit",{"_index":99,"title":{},"body":{"classes/CreateDressingDTO.html":{},"classes/CreateToppingDTO.html":{}}}],["open",{"_index":439,"title":{},"body":{"index.html":{}}}],["optional",{"_index":79,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["options",{"_index":129,"title":{},"body":{"modules/DataModule.html":{}}}],["out",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/SaladModule.html":{},"overview.html":{}}}],["overview",{"_index":468,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":390,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":276,"title":{},"body":{"controllers/SaladController.html":{},"injectables/SaladService.html":{}}}],["param('id",{"_index":291,"title":{},"body":{"controllers/SaladController.html":{}}}],["parameters",{"_index":76,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["parsearraypipe",{"_index":277,"title":{},"body":{"controllers/SaladController.html":{}}}],["parseuuidpipe",{"_index":278,"title":{},"body":{"controllers/SaladController.html":{}}}],["path",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["pick",{"_index":112,"title":{},"body":{"classes/CreateSaladDTO.html":{}}}],["pipe",{"_index":251,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipe_config",{"_index":312,"title":{},"body":{"modules/SaladModule.html":{}}}],["pipeconfig",{"_index":148,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/ToppingsPipe.html":{}}}],["pipeconfiguration",{"_index":310,"title":{},"body":{"modules/SaladModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipes/dressing.pipe",{"_index":284,"title":{},"body":{"controllers/SaladController.html":{}}}],["pipes/toppings.pipe",{"_index":286,"title":{},"body":{"controllers/SaladController.html":{}}}],["pipetransform",{"_index":154,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/ToppingsPipe.html":{}}}],["please",{"_index":449,"title":{},"body":{"index.html":{}}}],["port",{"_index":130,"title":{},"body":{"modules/DataModule.html":{}}}],["post",{"_index":208,"title":{},"body":{"controllers/IngredientController.html":{},"controllers/SaladController.html":{}}}],["post('/dressing",{"_index":197,"title":{},"body":{"controllers/IngredientController.html":{}}}],["post('/topping",{"_index":200,"title":{},"body":{"controllers/IngredientController.html":{}}}],["post(':id/dressing",{"_index":274,"title":{},"body":{"controllers/SaladController.html":{}}}],["post(':id/toppings",{"_index":267,"title":{},"body":{"controllers/SaladController.html":{}}}],["price",{"_index":101,"title":{},"body":{"classes/CreateDressingDTO.html":{},"classes/CreateToppingDTO.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{}}}],["private",{"_index":156,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["production",{"_index":429,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":406,"title":{},"body":{"index.html":{}}}],["project",{"_index":440,"title":{},"body":{"index.html":{}}}],["promise",{"_index":82,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":100,"title":{"properties.html":{}},"body":{"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"properties.html":{}}}],["provide",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/SaladModule.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/SaladModule.html":{}}}],["randomuuid",{"_index":333,"title":{},"body":{"injectables/SaladService.html":{}}}],["read",{"_index":450,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/DressingsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"injectables/SaladService.html":{},"injectables/ToppingsService.html":{}}}],["reflect",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":418,"title":{},"body":{"index.html":{}}}],["req",{"_index":89,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{}}}],["req.headers?.authorization",{"_index":92,"title":{},"body":{"guards/AuthGuard.html":{}}}],["req.method",{"_index":234,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.originalurl",{"_index":235,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{}}}],["request",{"_index":84,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{}}}],["res",{"_index":220,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/SaladModule.html":{},"overview.html":{}}}],["response",{"_index":221,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"modules/DataModule.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{}}}],["routermodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.register",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":424,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":86,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggingInterceptor.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"injectables/ToppingsService.html":{},"dependencies.html":{}}}],["s.id",{"_index":336,"title":{},"body":{"injectables/SaladService.html":{}}}],["salad",{"_index":59,"title":{"interfaces/Salad.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateSaladDTO.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"coverage.html":{}}}],["salad.controller",{"_index":309,"title":{},"body":{"modules/SaladModule.html":{}}}],["salad.dressing",{"_index":342,"title":{},"body":{"injectables/SaladService.html":{}}}],["salad.dto",{"_index":282,"title":{},"body":{"controllers/SaladController.html":{},"injectables/SaladService.html":{}}}],["salad.dto.ts",{"_index":111,"title":{},"body":{"classes/CreateSaladDTO.html":{},"coverage.html":{}}}],["salad.dto.ts:6",{"_index":114,"title":{},"body":{"classes/CreateSaladDTO.html":{}}}],["salad.service",{"_index":232,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{}}}],["salad/dto/create",{"_index":185,"title":{},"body":{"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/ToppingsService.html":{}}}],["salad/salad.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["saladcontroller",{"_index":260,"title":{"controllers/SaladController.html":{}},"body":{"controllers/SaladController.html":{},"modules/SaladModule.html":{},"coverage.html":{}}}],["saladid",{"_index":269,"title":{},"body":{"controllers/SaladController.html":{},"injectables/SaladService.html":{}}}],["saladmodule",{"_index":36,"title":{"modules/SaladModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SaladModule.html":{},"modules.html":{},"overview.html":{}}}],["salads",{"_index":329,"title":{},"body":{"injectables/SaladService.html":{}}}],["saladservice",{"_index":231,"title":{"injectables/SaladService.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"coverage.html":{},"overview.html":{}}}],["scalable",{"_index":411,"title":{},"body":{"index.html":{}}}],["server",{"_index":412,"title":{},"body":{"index.html":{}}}],["services/app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["services/dressings.service",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/IngredientController.html":{},"modules/SaladModule.html":{}}}],["services/toppings.service",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/IngredientController.html":{},"modules/SaladModule.html":{},"injectables/ToppingsPipe.html":{}}}],["setdressing",{"_index":264,"title":{},"body":{"controllers/SaladController.html":{},"injectables/SaladService.html":{}}}],["setdressing(saladid",{"_index":273,"title":{},"body":{"controllers/SaladController.html":{},"injectables/SaladService.html":{}}}],["side",{"_index":413,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"modules/DataModule.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"index.html":{}}}],["spent",{"_index":254,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["sponsors",{"_index":443,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../salad.module.ts",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["src/core/auth.guard.ts",{"_index":71,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/core/auth.guard.ts:7",{"_index":75,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/core/logging.interceptor.ts",{"_index":237,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/core/logging.interceptor.ts:13",{"_index":243,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/core/logging.interceptor.ts:15",{"_index":241,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/data/data.module.ts",{"_index":122,"title":{},"body":{"modules/DataModule.html":{}}}],["src/ingredient.controller.ts",{"_index":191,"title":{},"body":{"controllers/IngredientController.html":{},"coverage.html":{}}}],["src/ingredient.controller.ts:18",{"_index":206,"title":{},"body":{"controllers/IngredientController.html":{}}}],["src/ingredient.controller.ts:23",{"_index":201,"title":{},"body":{"controllers/IngredientController.html":{}}}],["src/ingredient.controller.ts:28",{"_index":204,"title":{},"body":{"controllers/IngredientController.html":{}}}],["src/ingredient.controller.ts:33",{"_index":198,"title":{},"body":{"controllers/IngredientController.html":{}}}],["src/interfaces/dressing.interface.ts",{"_index":135,"title":{},"body":{"interfaces/Dressing.html":{},"coverage.html":{}}}],["src/interfaces/topping.interface.ts",{"_index":343,"title":{},"body":{"interfaces/Topping.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/salad/dto/create",{"_index":97,"title":{},"body":{"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"coverage.html":{}}}],["src/salad/dto/dressing.dto.ts",{"_index":138,"title":{},"body":{"classes/DressingDTO.html":{},"coverage.html":{}}}],["src/salad/dto/dressing.dto.ts:12",{"_index":141,"title":{},"body":{"classes/DressingDTO.html":{}}}],["src/salad/dto/dressing.dto.ts:6",{"_index":139,"title":{},"body":{"classes/DressingDTO.html":{}}}],["src/salad/dto/dressing.dto.ts:9",{"_index":140,"title":{},"body":{"classes/DressingDTO.html":{}}}],["src/salad/dto/topping.dto.ts",{"_index":344,"title":{},"body":{"classes/ToppingDTO.html":{},"coverage.html":{}}}],["src/salad/dto/topping.dto.ts:12",{"_index":347,"title":{},"body":{"classes/ToppingDTO.html":{}}}],["src/salad/dto/topping.dto.ts:6",{"_index":345,"title":{},"body":{"classes/ToppingDTO.html":{}}}],["src/salad/dto/topping.dto.ts:9",{"_index":346,"title":{},"body":{"classes/ToppingDTO.html":{}}}],["src/salad/interfaces/salad.interface.ts",{"_index":257,"title":{},"body":{"interfaces/Salad.html":{},"coverage.html":{}}}],["src/salad/middlewares/logger.middleware.ts",{"_index":216,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/salad/middlewares/logger.middleware.ts:7",{"_index":229,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/salad/middlewares/logger.middleware.ts:9",{"_index":224,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/salad/pipes/dressing.pipe.ts",{"_index":143,"title":{},"body":{"injectables/DressingPipe.html":{},"coverage.html":{}}}],["src/salad/pipes/dressing.pipe.ts:11",{"_index":147,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["src/salad/pipes/dressing.pipe.ts:17",{"_index":150,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["src/salad/pipes/toppings.pipe.ts",{"_index":348,"title":{},"body":{"injectables/ToppingsPipe.html":{},"coverage.html":{}}}],["src/salad/pipes/toppings.pipe.ts:18",{"_index":351,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["src/salad/salad.controller.ts",{"_index":261,"title":{},"body":{"controllers/SaladController.html":{},"coverage.html":{}}}],["src/salad/salad.controller.ts:27",{"_index":270,"title":{},"body":{"controllers/SaladController.html":{}}}],["src/salad/salad.controller.ts:32",{"_index":272,"title":{},"body":{"controllers/SaladController.html":{}}}],["src/salad/salad.controller.ts:37",{"_index":268,"title":{},"body":{"controllers/SaladController.html":{}}}],["src/salad/salad.controller.ts:53",{"_index":275,"title":{},"body":{"controllers/SaladController.html":{}}}],["src/salad/salad.module.ts",{"_index":301,"title":{},"body":{"modules/SaladModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/salad/salad.module.ts:32",{"_index":305,"title":{},"body":{"modules/SaladModule.html":{}}}],["src/salad/salad.service.ts",{"_index":315,"title":{},"body":{"injectables/SaladService.html":{},"coverage.html":{}}}],["src/salad/salad.service.ts:11",{"_index":318,"title":{},"body":{"injectables/SaladService.html":{}}}],["src/salad/salad.service.ts:14",{"_index":327,"title":{},"body":{"injectables/SaladService.html":{}}}],["src/salad/salad.service.ts:23",{"_index":328,"title":{},"body":{"injectables/SaladService.html":{}}}],["src/salad/salad.service.ts:32",{"_index":321,"title":{},"body":{"injectables/SaladService.html":{}}}],["src/salad/salad.service.ts:38",{"_index":319,"title":{},"body":{"injectables/SaladService.html":{}}}],["src/salad/salad.service.ts:45",{"_index":331,"title":{},"body":{"injectables/SaladService.html":{}}}],["src/services/app.service.ts",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/services/app.service.ts:5",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["src/services/dressings.service.ts",{"_index":174,"title":{},"body":{"injectables/DressingsService.html":{},"coverage.html":{}}}],["src/services/dressings.service.ts:11",{"_index":184,"title":{},"body":{"injectables/DressingsService.html":{}}}],["src/services/dressings.service.ts:15",{"_index":182,"title":{},"body":{"injectables/DressingsService.html":{}}}],["src/services/dressings.service.ts:8",{"_index":179,"title":{},"body":{"injectables/DressingsService.html":{}}}],["src/services/toppings.service.ts",{"_index":364,"title":{},"body":{"injectables/ToppingsService.html":{},"coverage.html":{}}}],["src/services/toppings.service.ts:11",{"_index":368,"title":{},"body":{"injectables/ToppingsService.html":{}}}],["src/services/toppings.service.ts:15",{"_index":367,"title":{},"body":{"injectables/ToppingsService.html":{}}}],["src/services/toppings.service.ts:8",{"_index":365,"title":{},"body":{"injectables/ToppingsService.html":{}}}],["start",{"_index":425,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":428,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":430,"title":{},"body":{"index.html":{}}}],["started",{"_index":405,"title":{"index.html":{}},"body":{}}],["starter",{"_index":417,"title":{},"body":{"index.html":{}}}],["statements",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":453,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{}}}],["support",{"_index":444,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":464,"title":{},"body":{"modules.html":{}}}],["t",{"_index":357,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["t.name",{"_index":358,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["t.price",{"_index":360,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["table",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":245,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["test",{"_index":433,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":436,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":435,"title":{},"body":{"index.html":{}}}],["tests",{"_index":432,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":442,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.dataclient.send",{"_index":189,"title":{},"body":{"injectables/DressingsService.html":{},"injectables/ToppingsService.html":{}}}],["this.dataclient.send('add_toppings_salad",{"_index":340,"title":{},"body":{"injectables/SaladService.html":{}}}],["this.dataclient.send('create_salad",{"_index":339,"title":{},"body":{"injectables/SaladService.html":{}}}],["this.dataclient.send('get_dressings",{"_index":188,"title":{},"body":{"injectables/DressingsService.html":{}}}],["this.dataclient.send('get_salads",{"_index":337,"title":{},"body":{"injectables/SaladService.html":{}}}],["this.dataclient.send('get_toppings",{"_index":369,"title":{},"body":{"injectables/ToppingsService.html":{}}}],["this.dressingsservice.add(newdressing",{"_index":214,"title":{},"body":{"controllers/IngredientController.html":{}}}],["this.dressingsservice.getall",{"_index":159,"title":{},"body":{"injectables/DressingPipe.html":{},"controllers/IngredientController.html":{}}}],["this.findsalad(saladid",{"_index":341,"title":{},"body":{"injectables/SaladService.html":{}}}],["this.inmemorysalads.find((s",{"_index":335,"title":{},"body":{"injectables/SaladService.html":{}}}],["this.logger.log",{"_index":252,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["this.logger.log(`incoming",{"_index":233,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.pipeconfig.throwerror",{"_index":167,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/ToppingsPipe.html":{}}}],["this.saladservice.addtoppings(saladid",{"_index":295,"title":{},"body":{"controllers/SaladController.html":{}}}],["this.saladservice.createsalad(salad",{"_index":290,"title":{},"body":{"controllers/SaladController.html":{}}}],["this.saladservice.getall",{"_index":288,"title":{},"body":{"controllers/SaladController.html":{}}}],["this.saladservice.setdressing(saladid",{"_index":297,"title":{},"body":{"controllers/SaladController.html":{}}}],["this.toppingsservice.add(newtopping",{"_index":212,"title":{},"body":{"controllers/IngredientController.html":{}}}],["this.toppingsservice.getall",{"_index":210,"title":{},"body":{"controllers/IngredientController.html":{},"injectables/ToppingsPipe.html":{}}}],["throw",{"_index":168,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{}}}],["throwerror",{"_index":311,"title":{},"body":{"modules/SaladModule.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":253,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["topping",{"_index":120,"title":{"interfaces/Topping.html":{}},"body":{"classes/CreateToppingDTO.html":{},"injectables/DressingPipe.html":{},"controllers/IngredientController.html":{},"interfaces/Salad.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"coverage.html":{}}}],["topping.dto",{"_index":209,"title":{},"body":{"controllers/IngredientController.html":{},"injectables/ToppingsService.html":{}}}],["topping.dto.ts",{"_index":117,"title":{},"body":{"classes/CreateToppingDTO.html":{},"coverage.html":{}}}],["topping.dto.ts:6",{"_index":118,"title":{},"body":{"classes/CreateToppingDTO.html":{}}}],["topping.dto.ts:9",{"_index":119,"title":{},"body":{"classes/CreateToppingDTO.html":{}}}],["topping.name",{"_index":359,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["topping.price",{"_index":361,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["toppingdto",{"_index":266,"title":{"classes/ToppingDTO.html":{}},"body":{"controllers/SaladController.html":{},"injectables/SaladService.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"coverage.html":{}}}],["toppings",{"_index":259,"title":{},"body":{"interfaces/Salad.html":{},"controllers/SaladController.html":{},"injectables/SaladService.html":{},"injectables/ToppingsPipe.html":{}}}],["toppings.reduce((validatedtoppings",{"_index":355,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["toppingspipe",{"_index":285,"title":{"injectables/ToppingsPipe.html":{}},"body":{"controllers/SaladController.html":{},"injectables/ToppingsPipe.html":{},"coverage.html":{}}}],["toppingsservice",{"_index":38,"title":{"injectables/ToppingsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/IngredientController.html":{},"modules/SaladModule.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"coverage.html":{},"overview.html":{}}}],["touch",{"_index":454,"title":{},"body":{"index.html":{}}}],["transform",{"_index":144,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/ToppingsPipe.html":{}}}],["transform(dressing",{"_index":149,"title":{},"body":{"injectables/DressingPipe.html":{}}}],["transform(toppings",{"_index":350,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["transformer",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":124,"title":{},"body":{"modules/DataModule.html":{},"modules/SaladModule.html":{}}}],["transport.tcp",{"_index":128,"title":{},"body":{"modules/DataModule.html":{}}}],["true",{"_index":93,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":460,"title":{},"body":{"index.html":{}}}],["type",{"_index":78,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"interfaces/Dressing.html":{},"classes/DressingDTO.html":{},"injectables/DressingPipe.html":{},"injectables/DressingsService.html":{},"controllers/IngredientController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"interfaces/Salad.html":{},"controllers/SaladController.html":{},"modules/SaladModule.html":{},"injectables/SaladService.html":{},"interfaces/Topping.html":{},"classes/ToppingDTO.html":{},"injectables/ToppingsPipe.html":{},"injectables/ToppingsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":416,"title":{},"body":{"index.html":{}}}],["unit",{"_index":431,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":170,"title":{},"body":{"injectables/DressingPipe.html":{},"injectables/ToppingsPipe.html":{}}}],["unlicensed",{"_index":475,"title":{},"body":{"properties.html":{}}}],["use",{"_index":218,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":219,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":279,"title":{},"body":{"controllers/SaladController.html":{}}}],["useinterceptors(logginginterceptor",{"_index":287,"title":{},"body":{"controllers/SaladController.html":{}}}],["username",{"_index":113,"title":{},"body":{"classes/CreateSaladDTO.html":{},"interfaces/Salad.html":{}}}],["usevalue",{"_index":313,"title":{},"body":{"modules/SaladModule.html":{}}}],["validatedtoppings",{"_index":354,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["validatedtoppings.push(found",{"_index":362,"title":{},"body":{"injectables/ToppingsPipe.html":{}}}],["validator",{"_index":107,"title":{},"body":{"classes/CreateDressingDTO.html":{},"classes/CreateSaladDTO.html":{},"classes/CreateToppingDTO.html":{},"classes/DressingDTO.html":{},"classes/ToppingDTO.html":{},"dependencies.html":{}}}],["value",{"_index":227,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":476,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":473,"title":{},"body":{"properties.html":{}}}],["void",{"_index":225,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"modules/SaladModule.html":{}}}],["watch",{"_index":426,"title":{},"body":{"index.html":{}}}],["website",{"_index":458,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["whitelist",{"_index":293,"title":{},"body":{"controllers/SaladController.html":{}}}],["you'd",{"_index":447,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/SaladModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './services/app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nDataModule\n\nDataModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nSaladModule\n\nSaladModule\n\nAppModule -->\n\nSaladModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDressingsService\n\nDressingsService\n\nAppModule -->\n\nDressingsService->AppModule\n\n\n\n\n\nToppingsService\n\nToppingsService\n\nAppModule -->\n\nToppingsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            DressingsService\n                        \n                        \n                            ToppingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            IngredientController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            SaladModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './services/app.service';\nimport { IngredientController } from './ingredient.controller';\nimport { ToppingsService } from './services/toppings.service';\nimport { DressingsService } from './services/dressings.service';\nimport { SaladModule } from './salad/salad.module';\nimport { APP_GUARD, RouterModule } from '@nestjs/core';\nimport { DataModule } from './data/data.module';\nimport { AuthGuard } from './Core/auth.guard';\n\n@Module({\n  imports: [\n    SaladModule,\n    RouterModule.register([\n      {\n        path: 'salad',\n        module: SaladModule,\n      },\n    ]),\n    DataModule,\n  ],\n  controllers: [AppController, IngredientController],\n  providers: [\n    AppService,\n    ToppingsService,\n    DressingsService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/services/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Welcome to Salad Bar API!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/core/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/core/auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const [req]: [Request] = context.getArgs();\n    const authHeader = req.headers?.authorization;\n\n    return authHeader ? true : false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDressingDTO.html":{"url":"classes/CreateDressingDTO.html","title":"class - CreateDressingDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDressingDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/dto/create-dressing.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/create-dressing.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/create-dressing.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber } from 'class-validator';\nimport { Dressing } from '../../interfaces/dressing.interface';\n\nexport class CreateDressingDTO implements Omit {\n  @IsNotEmpty()\n  name: string;\n\n  @IsNumber()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSaladDTO.html":{"url":"classes/CreateSaladDTO.html","title":"class - CreateSaladDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSaladDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/dto/create-salad.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Pick\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/create-salad.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport { Salad } from '../interfaces/salad.interface';\n\nexport class CreateSaladDTO implements Pick {\n  @IsNotEmpty()\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateToppingDTO.html":{"url":"classes/CreateToppingDTO.html","title":"class - CreateToppingDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateToppingDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/dto/create-topping.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/create-topping.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/create-topping.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber } from 'class-validator';\nimport { Topping } from '../../interfaces/topping.interface';\n\nexport class CreateToppingDTO implements Omit {\n  @IsNotEmpty()\n  name: string;\n\n  @IsNumber()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'DATA',\n        transport: Transport.TCP,\n        options: {\n          port: 3002,\n        },\n      },\n    ]),\n  ],\n  exports: [ClientsModule],\n})\nexport class DataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dressing.html":{"url":"interfaces/Dressing.html","title":"interface - Dressing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Dressing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/dressing.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Dressing {\n  id: number;\n  name: string;\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DressingDTO.html":{"url":"classes/DressingDTO.html","title":"class - DressingDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DressingDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/dto/dressing.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Dressing\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/dressing.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/dressing.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/dressing.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber } from 'class-validator';\nimport { Dressing } from '../../interfaces/dressing.interface';\n\nexport class DressingDTO implements Dressing {\n  @IsNumber()\n  id: number;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNumber()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DressingPipe.html":{"url":"injectables/DressingPipe.html","title":"injectable - DressingPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DressingPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/pipes/dressing.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pipeConfig)\n                    \n                \n                        \n                            \n                                Defined in src/salad/pipes/dressing.pipe.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pipeConfig\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(dressing: DressingDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/salad/pipes/dressing.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dressing\n                                    \n                                                DressingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DressingDTO\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { DressingDTO } from '../dto/dressing.dto';\n\n@Injectable()\nexport class DressingPipe implements PipeTransform {\n  constructor(\n    // private dressingsService: DressingsService,\n    @Inject('PIPE_CONFIG') private pipeConfig,\n  ) {}\n\n  transform(dressing: DressingDTO) {\n    return dressing;\n    // const dressings = this.dressingsService.getAll();\n\n    // const found = dressings.find(\n    //   (d) => d.name === dressing.name && d.price === dressing.price,\n    // );\n\n    // if (found) {\n    //   return found;\n    // } else if (this.pipeConfig.throwError) {\n    //   throw new HttpException(\n    //     `Unknown Topping : ${JSON.stringify(dressing)}`,\n    //     HttpStatus.BAD_REQUEST,\n    //   );\n    // } else {\n    //   return null;\n    // }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DressingsService.html":{"url":"injectables/DressingsService.html","title":"injectable - DressingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DressingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/dressings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/services/dressings.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(newDressing: CreateDressingDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/services/dressings.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newDressing\n                                    \n                                                CreateDressingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/dressings.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\nimport { Dressing } from '../interfaces/dressing.interface';\nimport { CreateDressingDTO } from '../salad/dto/create-dressing.dto';\n\n@Injectable()\nexport class DressingsService {\n  constructor(@Inject('DATA') private readonly dataClient: ClientProxy) {}\n\n  getAll(): Observable {\n    return this.dataClient.send('get_dressings', {}) as Observable;\n  }\n\n  add(newDressing: CreateDressingDTO): Observable {\n    return this.dataClient.send(\n      'create_dressing',\n      newDressing,\n    ) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IngredientController.html":{"url":"controllers/IngredientController.html","title":"controller - IngredientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IngredientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ingredient.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDressing\n                            \n                            \n                                createTopping\n                            \n                            \n                                getDressings\n                            \n                            \n                                getToppings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDressing\n                        \n                    \n                \n            \n            \n                \ncreateDressing(newDressing: CreateDressingDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/dressing')\n                \n            \n\n            \n                \n                    Defined in src/ingredient.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newDressing\n                                    \n                                                CreateDressingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTopping\n                        \n                    \n                \n            \n            \n                \ncreateTopping(newTopping: CreateToppingDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/topping')\n                \n            \n\n            \n                \n                    Defined in src/ingredient.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTopping\n                                    \n                                                CreateToppingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDressings\n                        \n                    \n                \n            \n            \n                \ngetDressings()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dressings')\n                \n            \n\n            \n                \n                    Defined in src/ingredient.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToppings\n                        \n                    \n                \n            \n            \n                \ngetToppings()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('toppings')\n                \n            \n\n            \n                \n                    Defined in src/ingredient.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { DressingsService } from './services/dressings.service';\nimport { ToppingsService } from './services/toppings.service';\nimport { Dressing } from './interfaces/dressing.interface';\nimport { Topping } from './interfaces/topping.interface';\nimport { CreateDressingDTO } from './salad/dto/create-dressing.dto';\nimport { CreateToppingDTO } from './salad/dto/create-topping.dto';\n\n@Controller()\nexport class IngredientController {\n  constructor(\n    private toppingsService: ToppingsService,\n    private dressingsService: DressingsService,\n  ) {}\n\n  @Get('toppings')\n  getToppings(): Observable {\n    return this.toppingsService.getAll();\n  }\n\n  @Post('/topping')\n  createTopping(@Body() newTopping: CreateToppingDTO): Observable {\n    return this.toppingsService.add(newTopping);\n  }\n\n  @Get('dressings')\n  getDressings(): Observable {\n    return this.dressingsService.getAll();\n  }\n\n  @Post('/dressing')\n  createDressing(@Body() newDressing: CreateDressingDTO): Observable {\n    return this.dressingsService.add(newDressing);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/middlewares/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/salad/middlewares/logger.middleware.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LoggerMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/salad/middlewares/logger.middleware.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { SaladService } from '../salad.service';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  private readonly logger = new Logger(LoggerMiddleware.name);\n\n  use(req: Request, res: Response, next: NextFunction) {\n    this.logger.log(`Incoming ${req.method} : ${req.originalUrl}`);\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logging.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logging.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/logging.interceptor.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(LoggingInterceptor.name);\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const controllerClass = context.getClass();\n    const [req]: [Request] = context.getArgs();\n\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(\n        tap(() =>\n          this.logger.log(\n            `Time spent on [${controllerClass.name}] ${req.originalUrl} : ${\n              Date.now() - now\n            }ms`,\n          ),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Salad.html":{"url":"interfaces/Salad.html","title":"interface - Salad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Salad\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/interfaces/salad.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dressing\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            toppings\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dressing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dressing:         Dressing\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Dressing\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toppings:         Topping[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Topping[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dressing } from '../../interfaces/dressing.interface';\nimport { Topping } from '../../interfaces/topping.interface';\n\nexport interface Salad {\n  id: string;\n  username: string;\n  date: Date;\n  toppings?: Topping[];\n  dressing?: Dressing;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SaladController.html":{"url":"controllers/SaladController.html","title":"controller - SaladController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SaladController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/salad.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToppings\n                            \n                            \n                                getAll\n                            \n                            \n                                makeSalad\n                            \n                            \n                                setDressing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToppings\n                        \n                    \n                \n            \n            \n                \naddToppings(saladId: string, toppings: ToppingDTO[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/toppings')\n                \n            \n\n            \n                \n                    Defined in src/salad/salad.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saladId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toppings\n                                    \n                                                ToppingDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/salad/salad.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSalad\n                        \n                    \n                \n            \n            \n                \nmakeSalad(salad: CreateSaladDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/salad/salad.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    salad\n                                    \n                                                CreateSaladDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDressing\n                        \n                    \n                \n            \n            \n                \nsetDressing(saladId: string, dressing: DressingDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/dressing')\n                \n            \n\n            \n                \n                    Defined in src/salad/salad.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saladId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dressing\n                                    \n                                                DressingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseArrayPipe,\n  ParseUUIDPipe,\n  Post,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { LoggingInterceptor } from '../core/logging.interceptor';\nimport { CreateSaladDTO } from './dto/create-salad.dto';\nimport { DressingDTO } from './dto/dressing.dto';\nimport { ToppingDTO } from './dto/topping.dto';\nimport { Salad } from './interfaces/salad.interface';\nimport { DressingPipe } from './pipes/dressing.pipe';\nimport { ToppingsPipe } from './pipes/toppings.pipe';\nimport { SaladService } from './salad.service';\n\n@Controller()\n@UseInterceptors(LoggingInterceptor)\nexport class SaladController {\n  constructor(private saladService: SaladService) {}\n\n  @Get()\n  getAll(): Observable {\n    return this.saladService.getAll();\n  }\n\n  @Post()\n  makeSalad(@Body() salad: CreateSaladDTO): Observable {\n    return this.saladService.createSalad(salad);\n  }\n\n  @Post(':id/toppings')\n  addToppings(\n    @Param('id', ParseUUIDPipe) saladId: string,\n    @Body(\n      new ParseArrayPipe({\n        items: ToppingDTO,\n        whitelist: true,\n        forbidNonWhitelisted: true,\n      }),\n      // ToppingsPipe,\n    )\n    toppings: ToppingDTO[],\n  ) {\n    return this.saladService.addToppings(saladId, toppings);\n  }\n\n  @Post(':id/dressing')\n  setDressing(\n    @Param('id', ParseUUIDPipe) saladId: string,\n    @Body(DressingPipe) dressing: DressingDTO,\n  ) {\n    return this.saladService.setDressing(saladId, dressing);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SaladModule.html":{"url":"modules/SaladModule.html","title":"module - SaladModule","body":"\n                   \n\n\n\n\n    Modules\n    SaladModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SaladModule\n\n\n\ncluster_SaladModule_imports\n\n\n\ncluster_SaladModule_providers\n\n\n\n\nDataModule\n\nDataModule\n\n\n\nSaladModule\n\nSaladModule\n\nSaladModule -->\n\nDataModule->SaladModule\n\n\n\n\n\nDressingsService\n\nDressingsService\n\nSaladModule -->\n\nDressingsService->SaladModule\n\n\n\n\n\nSaladService\n\nSaladService\n\nSaladModule -->\n\nSaladService->SaladModule\n\n\n\n\n\nToppingsService\n\nToppingsService\n\nSaladModule -->\n\nToppingsService->SaladModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/salad/salad.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DressingsService\n                        \n                        \n                            SaladService\n                        \n                        \n                            ToppingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SaladController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/salad/salad.module.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  MiddlewareConsumer,\n  Module,\n  NestMiddleware,\n  NestModule,\n} from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { DataModule } from '../data/data.module';\nimport { DressingsService } from '../services/dressings.service';\nimport { ToppingsService } from '../services/toppings.service';\nimport { LoggerMiddleware } from './middlewares/logger.middleware';\nimport { SaladController } from './salad.controller';\nimport { SaladService } from './salad.service';\n\nconst pipeConfiguration = {\n  throwError: true,\n};\n@Module({\n  controllers: [SaladController],\n  providers: [\n    SaladService,\n    ToppingsService,\n    DressingsService,\n    {\n      provide: 'PIPE_CONFIG',\n      useValue: pipeConfiguration,\n    },\n  ],\n  imports: [DataModule],\n})\nexport class SaladModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware).forRoutes(SaladController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaladService.html":{"url":"injectables/SaladService.html","title":"injectable - SaladService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SaladService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/salad.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToppings\n                            \n                            \n                                createSalad\n                            \n                            \n                                    Private\n                                findSalad\n                            \n                            \n                                getAll\n                            \n                            \n                                setDressing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/salad/salad.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToppings\n                        \n                    \n                \n            \n            \n                \naddToppings(saladId: string, toppings: ToppingDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/salad/salad.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saladId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toppings\n                                    \n                                                ToppingDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSalad\n                        \n                    \n                \n            \n            \n                \ncreateSalad(salad: CreateSaladDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/salad/salad.service.ts:32\n                \n            \n\n\n            \n                \n                    Create a new salad\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    salad\n                                    \n                                                CreateSaladDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the salad to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable containing the salad just created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        findSalad\n                        \n                    \n                \n            \n            \n                \n                    \n                    findSalad(saladId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/salad/salad.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saladId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Salad\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/salad/salad.service.ts:23\n                \n            \n\n\n            \n                \n                    Get all salads\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An observable containes all salads\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDressing\n                        \n                    \n                \n            \n            \n                \nsetDressing(saladId: string, dressing: DressingDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/salad/salad.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saladId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dressing\n                                    \n                                                DressingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Salad\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, NotImplementedException } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { randomUUID } from 'crypto';\nimport { Observable } from 'rxjs';\nimport { CreateSaladDTO } from './dto/create-salad.dto';\nimport { DressingDTO } from './dto/dressing.dto';\nimport { ToppingDTO } from './dto/topping.dto';\nimport { Salad } from './interfaces/salad.interface';\n\n@Injectable()\nexport class SaladService {\n  constructor(@Inject('DATA') private readonly dataClient: ClientProxy) {}\n\n  private findSalad(saladId: string): Salad {\n    throw new NotImplementedException();\n    // return this.inMemorySalads.find((s) => s.id === saladId);\n  }\n\n  /**\n   * Get all salads\n   * @returns An observable containes all salads\n   */\n  getAll(): Observable {\n    return this.dataClient.send('get_salads', {}) as Observable;\n  }\n\n  /**\n   * Create a new salad\n   * @param salad the salad to create\n   * @returns An observable containing the salad just created\n   */\n  createSalad(salad: CreateSaladDTO): Observable {\n    const newSalad = { ...salad, id: randomUUID(), date: new Date() };\n\n    return this.dataClient.send('create_salad', newSalad) as Observable;\n  }\n\n  addToppings(saladId: string, toppings: ToppingDTO[]) {\n    return this.dataClient.send('add_toppings_salad', {\n      saladId,\n      toppings,\n    }) as Observable;\n  }\n\n  setDressing(saladId: string, dressing: DressingDTO) {\n    const salad = this.findSalad(saladId);\n    if (dressing) {\n      salad.dressing = dressing;\n    }\n    return salad;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Topping.html":{"url":"interfaces/Topping.html","title":"interface - Topping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Topping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/topping.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Topping {\n  id: number;\n  name: string;\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToppingDTO.html":{"url":"classes/ToppingDTO.html","title":"class - ToppingDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToppingDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/dto/topping.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Topping\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/topping.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/topping.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/salad/dto/topping.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, isNumber, IsNumber } from 'class-validator';\nimport { Topping } from '../../interfaces/topping.interface';\n\nexport class ToppingDTO implements Topping {\n  @IsNumber()\n  id: number;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNumber()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToppingsPipe.html":{"url":"injectables/ToppingsPipe.html","title":"injectable - ToppingsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToppingsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/salad/pipes/toppings.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(toppings: ToppingDTO[])\n                \n            \n\n\n            \n                \n                    Defined in src/salad/pipes/toppings.pipe.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toppings\n                                    \n                                                ToppingDTO[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { ToppingsService } from '../../services/toppings.service';\nimport { ToppingDTO } from '../dto/topping.dto';\n\n@Injectable()\nexport class ToppingsPipe implements PipeTransform {\n  // constructor(\n  //   private toppingsService: ToppingsService,\n  //   @Inject('PIPE_CONFIG') private pipeConfig,\n  // ) {}\n\n  async transform(toppings: ToppingDTO[]) {\n    return toppings;\n    // const existingToppings = await this.toppingsService.getAll();\n\n    // const validatedToppings = toppings.reduce((validatedToppings, topping) => {\n    //   const found = existingToppings.find(\n    //     (t) => t.name === topping.name && t.price === topping.price,\n    //   );\n    //   if (found) {\n    //     validatedToppings.push(found);\n    //   } else if (this.pipeConfig.throwError) {\n    //     throw new HttpException(\n    //       `Unknown Topping : ${JSON.stringify(topping)}`,\n    //       HttpStatus.BAD_REQUEST,\n    //     );\n    //   }\n    //   return validatedToppings;\n    // }, []);\n\n    // return validatedToppings;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToppingsService.html":{"url":"injectables/ToppingsService.html","title":"injectable - ToppingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToppingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/toppings.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/services/toppings.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(newTopping: CreateToppingDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/services/toppings.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTopping\n                                    \n                                                CreateToppingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/toppings.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\nimport { Topping } from '../interfaces/topping.interface';\nimport { CreateToppingDTO } from '../salad/dto/create-topping.dto';\n\n@Injectable()\nexport class ToppingsService {\n  constructor(@Inject('DATA') private readonly dataClient: ClientProxy) {}\n\n  getAll(): Observable {\n    return this.dataClient.send('get_toppings', {}) as Observable;\n  }\n\n  add(newTopping: CreateToppingDTO): Observable {\n    return this.dataClient.send(\n      'create_topping',\n      newTopping,\n    ) as Observable;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ingredient.controller.ts\n            \n            controller\n            IngredientController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/dressing.interface.ts\n            \n            interface\n            Dressing\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interfaces/topping.interface.ts\n            \n            interface\n            Topping\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/salad/dto/create-dressing.dto.ts\n            \n            class\n            CreateDressingDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/salad/dto/create-salad.dto.ts\n            \n            class\n            CreateSaladDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/salad/dto/create-topping.dto.ts\n            \n            class\n            CreateToppingDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/salad/dto/dressing.dto.ts\n            \n            class\n            DressingDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/salad/dto/topping.dto.ts\n            \n            class\n            ToppingDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/salad/interfaces/salad.interface.ts\n            \n            interface\n            Salad\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/salad/middlewares/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/salad/pipes/dressing.pipe.ts\n            \n            injectable\n            DressingPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/salad/pipes/toppings.pipe.ts\n            \n            injectable\n            ToppingsPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/salad/salad.controller.ts\n            \n            controller\n            SaladController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/salad/salad.module.ts\n            \n            variable\n            pipeConfiguration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/salad/salad.service.ts\n            \n            injectable\n            SaladService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/services/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/dressings.service.ts\n            \n            injectable\n            DressingsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/toppings.service.ts\n            \n            injectable\n            ToppingsService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/microservices : ^9.3.12\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SaladModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_SaladModule\n\n\n\ncluster_SaladModule_providers\n\n\n\n\nDataModule\n\nDataModule\n\n\n\nSaladModule\n\nSaladModule\n\nSaladModule -->\n\nDataModule->SaladModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\nAppModule -->\n\nSaladModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDressingsService\n\nDressingsService\n\nSaladModule -->\n\nDressingsService->SaladModule\n\n\n\nAppModule -->\n\nDressingsService->AppModule\n\n\n\n\n\nToppingsService\n\nToppingsService\n\nSaladModule -->\n\nToppingsService->SaladModule\n\n\n\nAppModule -->\n\nToppingsService->AppModule\n\n\n\n\n\nSaladService\n\nSaladService\n\nSaladModule -->\n\nSaladService->SaladModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            pipeConfiguration   (src/.../salad.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/salad/salad.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pipeConfiguration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  throwError: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
